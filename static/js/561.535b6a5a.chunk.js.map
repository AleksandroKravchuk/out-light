{"version":3,"file":"static/js/561.535b6a5a.chunk.js","mappings":"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","sources":["api/friendsApi.js","api/newsApi.js","api/noticesApi.js","api/petApi.js","api/userApi.js","api/index.js","components/Loading/Loading.styled.jsx","components/Loading/Loading.jsx","components/error/error.jsx","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchFriends = async url => {\n  const { data } = await axios.get(`${url}/friends`);\n  const { friends } = data.data;\n  console.log(friends);\n  return friends;\n};\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://team-api-blended2.herokuapp.com';\n\n// export const fetchNews = async() => {\n//   const {data} = await axios.get(`/news`);\n//   const { news } = data.data;\n//   return news;\n// };\n\nexport const fetchNewsSearch = async (url, query) => {\n  if (!query) {\n    const { data } = await axios.get(`${url}/news`);\n    const { news } = data.data;\n    return news;\n  }\n  const { data } = await axios.get(`/news/search/${query}`);\n  const { news } = data.data;\n  return news;\n};\n","import axios from 'axios';\n\nexport const fetchNotices = async (url, query, token) => {\n  if (!query) {\n    const { data } = await axios.get(`${url}/notices/sell`);\n\n    const { notices } = data.data;\n    return notices;\n  } else if (!token) {\n    const { data } = await axios.get(`${url}/notices/${query}`);\n    const { notices } = data.data;\n    return notices;\n  }\n  const { data } = await axios({\n    method: 'get',\n    url: `${url}/notices/find/${query}`,\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n  const { pets } = data.data;\n  return pets;\n};\n\nexport const fetchSearch = async (url, query) => {\n  const { data } = await axios.get(`${url}/notices/search/${query}`);\n\n  const { news } = data.data;\n  return news;\n};\n\nexport const fetchAddFavorite = async (url, query, token) => {\n  const { data } = await axios({\n    method: 'patch',\n    url: `${url}/notices/addfavorite/${query}`,\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  const { notices } = data.data;\n  return notices;\n};\n\nexport const fetchRemoveFavorite = async (url, query, token) => {\n  const { data } = await axios({\n    method: 'patch',\n    url: `${url}/notices/deletefavorite/${query}`,\n    headers: {\n      Authorization: `Bearer ` + token,\n    },\n  });\n\n  return data;\n};\n\n// export const fetchSellNotices = async () => {\n//     const {data} = await axios.get('/notices/sell');\n//     const { notices } = data.data;\n//     return data.data.notices;\n// };\n\n// export const fetchForFreeNotices = async () => {\n//     const {data} = await axios.get('/notices/for-free');\n//     const {notices}\n//     return data.data.notices;\n// };\n\n// export const fetchLostFoundNotices = async () => {\n//     const {data} = await axios.get('/notices/lost-found');\n\n//     return data.data.notices;\n// };\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://team-api-blended2.herokuapp.com';\n\nexport const fetchPetAdd = async (param, token) => {\n  const data = await axios.post(`/pets/add`, param, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  console.log(data);\n  return data;\n};\n","import axios from 'axios';\n\nexport const fetchUser = async (url, token) => {\n  const { data } = await axios({\n    method: 'get',\n    url: `${url}/user`,\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n\n  const { user } = data.data;\n  return user;\n};\n","import { fetchFriends } from './friendsApi';\nimport { fetchNewsSearch } from './newsApi';\nimport {\n  fetchNotices,\n  fetchSearch,\n  fetchAddFavorite,\n  fetchRemoveFavorite,\n} from './noticesApi';\nimport { fetchPetAdd } from './petApi';\nimport { fetchUser } from './userApi';\n\nclass Fetch {\n  constructor() {\n    this.BASE_URL = 'https://team-api-server-outlight.onrender.com';\n  }\n\n  getFriends = async () => await fetchFriends(this.BASE_URL);\n\n  getNews = async query => await fetchNewsSearch(this.BASE_URL, query);\n\n  getNotices = async (query, token) =>\n    await fetchNotices(this.BASE_URL, query, token);\n\n  addToFavorite = async (query, token) =>\n    await fetchAddFavorite(this.BASE_URL, query, token);\n\n  removeFromFavorite = async (query, token) =>\n    await fetchRemoveFavorite(this.BASE_URL, query, token);\n\n  findNotices = async query => await fetchSearch(this.BASE_URL, query);\n\n  addPet = async (pet, query) => await fetchPetAdd(this.BASE_URL, pet, query);\n\n  getUser = async token => await fetchUser(this.BASE_URL, token);\n}\n\nexport const response = new Fetch();\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmargin: 0 auto;\ntext-align: center;\n`\n","import wait from 'img/wait.jpg';\nimport { Container } from './Loading.styled';\n\nconst Loading = () => {\n\n    return (\n\n        <Container>\n            <img src={wait} alt='wait' />\n            <p>Почекайте 2-3 тижні. Максимум 5</p>\n        </Container>\n    )\n}\n\nexport default Loading;","const Error = () => {\n\n    return (\n        <p>Something went wrong. Try again</p>\n    )\n}\n\nexport default Error\n","import { response } from 'api';\nimport { useEffect, useState } from 'react';\n// import { RotatingLines } from 'react-loader-spinner';\nimport Loading from 'components/Loading/Loading';\nimport Error from '../../components/error/error';\nimport {\n  Anchor,\n  CardThumb,\n  Container,\n  FirstThumb,\n  FriendsThumb,\n  FriendTitle,\n  Image,\n  Item,\n  SecondThumb,\n  Title\n} from './OurFriendsPage.styled';\n\nconst OurFriendsPage = () => {\n\n    const { getFriends } = response;\n\n    const [arr, setArr] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false)\n\n    const getAllFriends = async () => {\n        try {\n            setIsLoading(true);\n            const res = await getFriends();\n            setArr(res);\n\n        } catch (err) {\n            setError(err);\n\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        getAllFriends();\n    }, []);\n\n    return (\n        <>\n          <Title>Our friends</Title>\n\n            {isLoading && (\n                <Loading/>\n                // <RotatingLines\n                //         strokeColor=\"grey\"\n                //         strokeWidth=\"5\"\n                //         animationDuration=\"0.75\"\n                //         width=\"96\"\n                //         visible={true}\n                // />\n            )}\n\n            {arr && (\n              <FriendsThumb>\n\n                {arr.map(({ _id, imageUrl, title, time, address, email, phone }) => (\n\n                  <Container key={_id}>\n                    <FriendTitle>{title}</FriendTitle>\n\n                      <CardThumb>\n                        <FirstThumb>\n                          <Image src={imageUrl} alt={`${title} img`} />\n                        </FirstThumb>\n\n                        <SecondThumb>\n\n                          <ul>\n                            <Item >Time: <br />\n                              <div className='time'>\n                                {\n                                  time ? (<span>{time}</span>) : (<span>----------</span>)\n                                }\n                              </div>\n                            </Item>\n\n                            <Item>Adress:<br />\n                              {\n                                address ? (<span>{address}</span>) : (<span>----------</span>)\n                              }\n                            </Item>\n\n                            <Item>Email:<br />\n                              {\n                                email ? (<Anchor href={`mailto:${email}`}>{email}</Anchor>) : (<span>----------</span>)\n                              }\n                            </Item>\n\n                            <Item>Phone:<br />\n                              {\n                                phone ? (<Anchor href={`tel:${phone}`}>{phone}</Anchor>) : (<span>----------</span>)\n                              }\n                            </Item>\n                          </ul>\n\n                        </SecondThumb>\n                      </CardThumb>\n                    </Container>\n                  ))\n                }\n\n              </FriendsThumb>\n            )}\n\n            {error && <Error/>}\n    </>\n    )\n}\n\nexport default OurFriendsPage;\n"],"names":["fetchFriends","url","axios","data","friends","console","log","fetchNewsSearch","query","news","fetchNotices","token","notices","method","headers","authorization","pets","fetchSearch","fetchAddFavorite","Authorization","fetchRemoveFavorite","fetchPetAdd","param","fetchUser","user","Fetch","getFriends","BASE_URL","getNews","getNotices","addToFavorite","removeFromFavorite","findNotices","addPet","pet","getUser","this","response","Container","styled","src","wait","alt","useState","arr","setArr","error","setError","isLoading","setIsLoading","getAllFriends","res","useEffect","Title","FriendsThumb","map","_id","imageUrl","title","time","address","email","phone","FriendTitle","CardThumb","FirstThumb","Image","SecondThumb","Item","className","Anchor","href"],"sourceRoot":""}